// If you didn't want to run in 24/7 you can remove it.
const http = require('http');
const express = require('express');
const Discord = require("discord.js");const client = new Discord.Client();
const fs = require("fs");
const app = express();
const Canvas = require('canvas');
const config = require('./config.json');
const moment = require('moment');require('moment-duration-format');
const getYoutubeSubscriber = require('getyoutubesubscriber')
const guildInvites = new Map();
const ytdl = require('ytdl-core');

const swears = ['fuck', 'shit', 'nigga','nigger','ass','bitch','cunt','porn','cock','penis'];


/* FileSync */
let server = JSON.parse(fs.readFileSync(__dirname+"/servers.json"));
let botver = config.mainbot_ver;
let owner = config.ownerid;
let botname = config.botname;
var prefix = config.prefix;
var eprefix = prefix+" ";
let beprefix = " "+eprefix;
let economy_prefix = config.economy_prefix/**/;
var commandlist = [beprefix+"help",beprefix+"profile",beprefix+"prefix",beprefix+"clear",beprefix+"cat",beprefix+"kawaii"];
var logchannel;

/*global Set, Map*/
app.use(express.static('public'));
app.listen(process.env.PORT);
app.get("/", (request, response) => {
  console.log(Date.now() + " Ping Received");
  response.sendStatus(200); 
});



client.on('shardError', error => {
	 console.error('A websocket connection encountered an error:', error);
});
process.on('unhandledRejection', error => {
	console.error('Unhandled promise rejection:', error);
});




setInterval(() => {
  http.get(`http://mittz-bot.glitch.me/`);
}, 280000);

client.on("message", (message) => {
  if (message.author.bot) return;
  if (message.channel.type === "text") {
  if (server.prefix[message.guild.id]){prefix=server.prefix[message.guild.id]; eprefix = prefix+" ";}
  else prefix='!v!'; eprefix = prefix+" ";{}
  }
  
  //else prefix='!v!'; eprefix = prefix+" ";{}
  
  for (let i = 0; i < swears.length; i++) {
  const bad_word = swears[i];
  if ((message.content).toLowerCase().includes(bad_word)) {
    if (message.channel.type === "text") {
      if (server.filter[message.guild.id]){if(server.filter[message.guild.id]==='on'){
        return message.channel.messages.fetch({ limit: 1 }).then(messages => { 
  message.channel.bulkDelete(messages); 
  message.channel.send(`${message.author.tag} tried to use profanity.`);
        message.member.send(new Discord.MessageEmbed().setTitle("O.O hey, **" + message.author.username + " **Unwanted language in** " + message.guild.name + "**.").setDescription("```I noticed that you said something that the owner added to the profanity filter, please do not continue to do this or there will be problems. ```\n`You said: "+message.content+"`").setColor("#ffa500"));
});
      } 
    }
    }if (message.channel.type !== "text") {return message.channel.send("``You said: "+message.content+"``");}
}
  }
  
  if (message.content.startsWith(eprefix+"filter")) {
    
    if (message.content==(eprefix+"filter on")) {
      if(server.filter[message.guild.id]!=='on'){
      message.channel.send("Profanity is now disallowed");
      server.filter[message.guild.id]='on';
      fs.writeFileSync("servers.json", JSON.stringify(server, null, 2));}
      else {message.channel.send("Profanity filter is already on!");}
    }
      
    if (message.content==(eprefix+"filter off")) {
      if(server.filter[message.guild.id]!=='off'){
      message.channel.send("Profanity is now allowed");
      server.filter[message.guild.id]='off';
      fs.writeFileSync("servers.json", JSON.stringify(server, null, 2));}
      else {message.channel.send("Profanity filter is already off!");}
    }
    if (message.content.endsWith(eprefix+"filter")) {
      message.channel.send("Options `[on , off]` Ex.**"+eprefix+"filter on**");
      }
  }
  
  
  if (message.content.startsWith(eprefix + 'avatar')) {
  if (!message.mentions.users.size) {
		return message.channel.send(`${message.author.username}'s avatar: ${message.author.avatarURL({ format: "png", dynamic: true })} `);
	}

	const avatarList = message.mentions.users.map(user => {
		return `${user.username}'s avatar: ${user.displayAvatarURL({ format: "png", dynamic: true })}`;
	});

	message.channel.send(avatarList);
  }
  
  //if(message.guild.id==728008557244448788&&(message.channel.id!=728025726556569631)){ return;}
  if (message.content == eprefix+'stats') {
    message.channel.send(`I am in ${client.guilds.cache.size} servers!`); 
	}
  if (message.content == eprefix+'creator') {
    const creator = new Discord.MessageEmbed()
            .setColor(0xf1c40f)
            .setTitle('Programmer & Artist')
            .setAuthor(client.guilds.resolve('396838715894530068').members.resolve('193127888646701056').user.tag, client.user.avatarURL({ format: "png", dynamic: true }))
            .setThumbnail(client.guilds.resolve('396838715894530068').members.resolve('193127888646701056').user.avatarURL())
            .setDescription('')
            .setTimestamp(new Date())
            .setFooter('Orago Dev', 'https://cdn.glitch.com/65f81ac1-5972-4a88-a61a-62585d79cfc0%2Fboxie-2048px.png?v=1594354728664');

        // send the entire array of strings as a message
        // by default, discord.js will `.join()` the array with `\n`
        message.channel.send(creator);
	}
  if (message.content.startsWith(eprefix + 'ping')) {
    try {
      message.channel.send("Pinging...").then(msg=>{ 
      const embed = new Discord.MessageEmbed()
      .setColor("RANDOM")
      .addField("‚åõ Latency", `**${message.createdTimestamp -  message.createdTimestamp}ms**`)
      .addField("üíì API", `**${Math.floor(client.ws.ping)}ms**`) 
       
       setTimeout(()=>{
         msg.edit(`üèì Pong!`, embed)
    },1500)
  })
    } catch (error) {
      return message.channel.send(`Something went wrong: ${error.message}`);
      
    }
  } 
  
  if (message.content==(eprefix + "help")||message.content==("!v! help")) {
    const embed = new Discord.MessageEmbed()
        .setThumbnail(client.user.avatarURL({ format: "png", dynamic: true }))
        .setTitle('__'+client.user.username+' Information__')
        .setDescription('Hello! <:gold:733213975705026620> I\'m '+botname+'.\nI can do lots of things like play audio from a few radio channels, help moderate a server, provide fun commands, run a small economy, and have a decent amount of other utility features. \nUse `'+eprefix+'commandlist` to see what other things i can do.')
        .setColor(config.color)
        .addField('__Developer__', '<@193127888646701056>', true)
        .addField('__Library__', 'Discord.js', true)
        .addField('__Server Count__', client.guilds.cache.size, true)
        .addField('__User Count__', client.users.cache.size, true)
        .addField('__Channel Count__', client.channels.cache.size, true)
        .addField('__Emojis Count__', client.emojis.cache.size, true)
        .addField('__Uptime__', moment.duration(client.uptime).format('d[d ]h[h ]m[m ]s[s]'), true)
        .addField(`__Creator's Homepage__`, 'https://mittens.glitch.me', true)
        .addField('__Memory Usage__', `${Math.round(process.memoryUsage().heapUsed / 1024 / 1024)}MB`, true)
        .addField('__Prefix__', prefix, true)
        .setFooter(`${client.user.username} | By: Orago`)
      message.channel.send(embed);
  }
 if (message.content==(eprefix + "commandlist")||message.content==("!v! commandlist")) {
    const embed = new Discord.MessageEmbed()
        .setThumbnail(client.user.avatarURL)
        .setTitle('__'+client.user.username+' Commands__')
        .setDescription('Hello! <:gold:733213975705026620>')
        .addField('__Command List 1__', commandlist.toString(), true)
        .setColor(config.color)
        .setFooter(`${client.user.username} | By: Orago`)
      message.author.send(embed);
  }
  
  
  if (message.content.startsWith(eprefix+"subscribers")) {
  const args = message.content.split(' ').slice(2); 
const role = args.join(' '); 
if (!role.includes("https://www.youtube.com/channel/")){message.channel.bulkDelete(1); return message.reply("not a valid link");}
var url = role.lastIndexOf("l/");var id = role.slice(url+2, Infinity);
if (!role) return message.reply('You haven\'t given a role to remove!');

getYoutubeSubscriber(id).then((data) => {
message.channel.send("This youtube channel has "+data+" subscribers."+message.author.username);
});
  }  

  
  
if (message.content.startsWith("mittz")) {
  message.channel.send("The prefix for this guild is "+prefix+" ");   

  }
  if (message.channel.type === "text") {
  var kargs = message.content.split(" ").slice(1);
if (message.content.startsWith(eprefix + "kawaii")) {
  if (message.channel.type !== "text") {return message.channel.send('Please do this in a server with `'+client.user.username+'`')}
  var registered = false;
  if (!server.servers.includes(message.guild.id)&&!server.profiles.includes(message.author.id)) return message.channel.send("Please ask the server owner to setup "+client.user.username+" economy with `"+eprefix+"guild setup` then set up your profile with`"+eprefix+"self setup`");
  if (!server.profiles.includes(message.author.id)){return message.channel.send("Please setup "+client.user.username+" economy with `"+eprefix+"self setup`")}
  const user = getUserFromMention(kargs[1]);
  if (kargs[1]) {
		if (!user) {
			return message.reply('Please use a proper mention if you want to see someone else\'s avatar.');
		}
		var person = user;
	} else
var person = message.author;
  if (server.servers.includes(message.guild.id)){var registered = true;}
if (!server.profiles.includes(person.id)){return message.channel.send(`Please ask the user @ ${person.username} to setup `+client.user.username+`economy with `+"`"+eprefix+`self setup`+"`")}
var embed = new Discord.MessageEmbed()
        .setThumbnail(client.user.avatarURL({ format: "png", dynamic: true }))
        .setTitle(`__Guild and ${person.username}'s kawaii leaderboard__`)
        .setDescription(`Here are the scores and validity`)
        .setColor(config.color)
        .addField(`__Guild__`, ".", true)
        .addField(`__owo's__`, server.owo[message.guild.id], true)
        .addField(`__uwu's__`, server.uwu[message.guild.id], true)
        .addField(`__Self__`, ".", true)
        .addField(`__owo's__`, server.owo[person.id], true)
        .addField(`__uwu's__`, server.uwu[person.id], true)
        .addField(`__registered__`, registered, true)
        .setFooter(`${client.user.username} | By: Orago`)
    message.channel.send(embed)
}

if (message.content.startsWith(eprefix + "account")) {
  
  var registered = false;
  if (!server.servers.includes(message.guild.id)&&!server.profiles.includes(message.author.id)) return message.channel.send("Please ask the server owner to setup "+client.user.username+" economy with `"+eprefix+"guild setup` then set up your profile with`"+eprefix+"self setup`");
  if (!server.profiles.includes(message.author.id)){return message.channel.send("Please setup "+client.user.username+" economy with `"+eprefix+"self setup`")}
  const user = getUserFromMention(kargs[1]);
  if (kargs[1]) {
		if (!user) {
			return message.reply('Please use a proper mention if you want to see someone else\'s avatar.');
		}
		var person = user;
	} else
var person = message.author;
  if (server.servers.includes(message.guild.id)){var registered = true;}
if (!server.profiles.includes(person.id)){return message.channel.send(`Please ask the user @ ${person.username} to setup `+client.user.username+`economy with `+"`"+eprefix+`self setup`+"`")}
var embed = new Discord.MessageEmbed()
        .setThumbnail(client.user.avatarURL({ format: "png", dynamic: true }))
        .setTitle(`__Guild and ${person.username}'s kawaii leaderboard__`)
        .setDescription(`Here are the scores and validity`)
        .setColor(config.color)
        .addField(`__coin's__`, server.coins[person.id], true)
        .addField(`__exp__`, server.xp[person.id], true)
        .addField(`__owo's__`, server.owo[person.id], true)
        .addField(`__uwu's__`, server.uwu[person.id], true)
        
        .setFooter(`${client.user.username} | By: Orago`)
    message.channel.send(embed)
}

if (message.content.includes("owo")) {
  
  if (!server.servers.includes(message.guild.id)) return message.channel.send("Please ask the server owner to setup owo's with `"+eprefix+"guild setup`");
  if (!server.profiles.includes(message.author.id)) return message.channel.send("Please setup owo's with `"+eprefix+"self setup`");
server.owo[message.guild.id]=server.owo[message.guild.id]+1;
  server.owo[message.author.id]=server.owo[message.author.id]+1;
         fs.writeFileSync("kawaii.json", JSON.stringify(server, null, 2));
}
  
if (message.content.includes("uwu")) {
   if (!server.servers.includes(message.guild.id)) return message.channel.send("Please ask the server owner to setup uwu's with `"+eprefix+"guild setup`");
  if (!server.profiles.includes(message.author.id)) return message.channel.send("Please setup uwu's with `"+eprefix+"self setup`");
server.uwu[message.guild.id]=server.uwu[message.guild.id]+1;
  server.uwu[message.author.id]=server.uwu[message.author.id]+1;
         fs.writeFileSync("servers.json", JSON.stringify(server, null, 2));
}
  
  
  if (message.content==(eprefix+"self setup")) {
    if (!server.servers.includes(message.guild.id)) return message.channel.send("Please ask the server owner to setup "+client.user.username+" economy with `"+eprefix+"guild setup`");
   if (server.profiles.includes(message.author.id)) return message.channel.send(":closed_lock_with_key: **Whoops!** You already have a profile!");
  message.channel.send("**:unlock: Beep Boop Beep! We're setting up your profile!**").then(msg=>{
       server.profiles.push(message.author.id)
        server.owo[message.author.id]=0;
        server.coins[message.author.id]=0;
        server.uwu[message.author.id]=0;
        server.background[message.author.id] = "https://convertingcolors.com/plain-2C2F33.svg"
        server.description[message.author.id] = 'No Description Set'
        server.color[message.author.id] = "#ffffff"
        server.badges[message.author.id]=[]
        server.xp[message.author.id]=0
       fs.writeFileSync("servers.json", JSON.stringify(server, null, 2));
       setTimeout(()=>{
         msg.edit(":lock: **Your user has been added.** View the leaderboard with "+eprefix+"`prof`.")
    },1500)
  })
}
  if (message.content==(eprefix+"guild setup")) {
   if (server.servers.includes(message.guild.id)) return message.channel.send(":closed_lock_with_key: **Whoops!** This guild is already set up!");
  message.channel.send("**:unlock: Beep Boop Beep! We're setting up your profile!**").then(msg=>{
       server.servers.push(message.guild.id)
        server.owo[message.guild.id]=0;
        server.uwu[message.guild.id]=0;
       fs.writeFileSync("servers.json", JSON.stringify(server, null, 2));
       setTimeout(()=>{
         msg.edit(":lock: **Your guild has been added.** View the leaderboard with "+eprefix+"`prof`.")
          if (!server.profiles.includes(message.author.id)){return message.channel.send("While setting up the guild, I noticed you haven\'t set up a profile for yourself yet, do so by using the `"+eprefix+"self setup`");}
    },1500)
  })
}  
  }
if (message.content==(eprefix + "server")) {
  if (message.channel.type !== "text")return;
  var embed = new Discord.MessageEmbed()
      .setAuthor(`${message.guild.name} (${message.guild.id})`, message.guild.iconURL())
        .setThumbnail(client.user.avatarURL({ format: "png", dynamic: true }))
        .addField('Created On', message.guild.createdAt.toLocaleString(), true)
        .addField('Guild Owner', message.guild.owner.user.tag)
        .addField('Members', message.guild.memberCount, true)
        .addField('Real Members', message.guild.members.cache.filter(member => !member.user.bot).size, true)
        .addField('Bots', message.guild.members.cache.filter(member => member.user.bot).size, true)
        .addField('Total Channels', message.guild.channels.cache.size, true)
        .addField('Text Channels', message.guild.channels.cache.filter(ch => ch.type === 'text').size, true)
        .addField('Voice Channels', message.guild.channels.cache.filter(ch => ch.type === 'voice').size, true)
        .addField('Region', message.guild.region, true)
        .addField('Created', message.guild.createdAt, true)
        .addField('Partnered', message.guild.partnered, true)
        .addField('Roles', message.guild.roles.cache.map(role => role.toString()).join(' '), true)
        .setColor('#5CC5FF')
        
        .setFooter(client.user.username, client.user.avatarURL({ format: "png", dynamic: true }))
    message.channel.send(embed)
}
if (message.content==(eprefix + "homepage")) {
  const embed = new Discord.MessageEmbed()
  .setTitle("Visit homepage")
  .setAuthor("Mittens Homepage", "https://cdn.glitch.com/65f81ac1-5972-4a88-a61a-62585d79cfc0%2F8bitpc%20vaporwave%20blue%20cat.png?v=1594354853240")
  .setColor(0x00AE86)
  .setDescription("This is the homepage for all of the projects made by the same creator of this very bot!")
  .setFooter("Created by Orago", client.user.avatarURL({ format: "png", dynamic: true }))
  .setImage("https://cdn.glitch.com/65f81ac1-5972-4a88-a61a-62585d79cfc0%2Fboxie-2048px.png?v=1594354728664")
  .setThumbnail("https://cdn.glitch.com/65f81ac1-5972-4a88-a61a-62585d79cfc0%2Finbreadspread.png?v=1594354874436")
  .setTimestamp()
  .setURL("https://mittens.glitch.com")
message.channel.send(embed);
}
  var args = message.content.split(" ").slice(1);
if (message.content.startsWith(eprefix + "profile2")) {  
  if (message.channel.type !== "text") {return message.channel.send('Please do this in a server with `'+client.user.username+'`')}
  const user = getUserFromMention(args[1]);
  if (args[1]) {
		if (!user) {
			return message.reply('Please use a proper mention if you want to see someone else\'s avatar.');
		}
		var person = user;
	} else
var person = message.author;
  const embed = new Discord.MessageEmbed()
  .setTitle(person.username)
  .setAuthor(client.user.username, "https://cdn.glitch.com/65f81ac1-5972-4a88-a61a-62585d79cfc0%2F8bitpc%20vaporwave%20blue%20cat.png?v=1594354853240")
  .setColor(0x00AE86)
  .setDescription("ID: "+person.id+" ")
  
  .addField(`In ${message.guild.name} since`, message.member.joinedAt)
  .setImage(person.avatarURL())
  .setThumbnail("")
  .setFooter("Created by Orago", "https://cdn.glitch.com/65f81ac1-5972-4a88-a61a-62585d79cfc0%2Fboxie-2048px.png?v=1594354728664")
  .setTimestamp()
message.channel.send(embed);
}
  
if (message.content === eprefix+'me') {
    const canvas = Canvas.createCanvas(700, 250);
       const ctx = canvas.getContext('2d');
  Canvas.loadImage('https://img.freepik.com/free-vector/retro-vaporwave-background-cyberpunk-laser-grid-80s-style-abstract-futuristic-landscape_87408-125.jpg').then((background) => {
         ctx.drawImage(background, 0, 0, canvas.width, canvas.height);
           Canvas.loadImage(message.author.avatarURL({ format: 'jpg' })).then((icon) => {
Canvas.loadImage('https://cdn.discordapp.com/attachments/741450918020513813/742241361968758804/boxie32bfull.png').then((boxie) => {
                     ctx.drawImage(icon, 30, 45, 150, 150);
                     ctx.drawImage(boxie, 642, 192, 48, 48);
                     ctx.font = '40px sans-serif';
                     if (message.author.id===owner){ctx.fillStyle = "#deff1a";}
                     else {ctx.fillStyle = "#ffffff";}
                     ctx.fillText(`${message.author.tag}`, 240, 90);
                     ctx.fillStyle = "#ffffff";
                     ctx.font = '25px sans-serif';
                     ctx.fillText(`ID: ${message.author.id}`, 240, 150);
                     const attachment = new Discord.MessageAttachment(canvas.toBuffer(), 'profile.png');
                     message.channel.send(`Here is your profile, ${message.author.tag}!`, attachment);
                   
              })
             })
           })
  }
  if (message.content === eprefix+'cat') {
let width=(Math.random()*1800+200)|0;
		let height=(Math.random()*1800+200)|0;
		message.channel.send(new Discord.MessageEmbed().setColor("ORANGE").setDescription("**Meow!**").setImage("http://placekitten.com/"+width+"/"+height+"/"));
  }
  
  if (message.content.startsWith(eprefix+"play")) {
  if(message.guild.id==396838715894530068&&(message.channel.id!=741545026055569438)){ return message.author.send("You cant do this here")}
  const voiceChannel = message.member.voice.channel;
  if (!voiceChannel) {return message.reply('please join a voice channel first!');}  
    if (voiceChannel && voiceChannel.id !== "741450921690791996") {return message.channel.send("please join the music channel")}
  if (message.channel.type !== 'text') return;
  const args = message.content.split(' ').slice(2); 
const type = args.join(' '); 
if (!type) return message.reply('The currently available radio\'s are lofi, vaporwave, jpop, and kpop.\nEx. '+eprefix+' play lofi'); 
if (type == 'lofi') {message.reply('you are now listening to the '+type+' radio.');
voiceChannel.join().then(connection => {
			
			const dispatcher = connection.play('http://hyades.shoutca.st:8043/stream', { volume: 1 });
			dispatcher.on('finish', () => voiceChannel.leave());
		});
} 
else if (type == 'vaporwave') {message.reply('you are now listening to the '+type+' radio.');
voiceChannel.join().then(connection => {
			
			const dispatcher = connection.play('http://radio.plaza.one/mp3', { volume: 1 });
			dispatcher.on('finish', () => voiceChannel.leave());
		});
} 
else if (type == 'jpop') {message.reply('you are now listening to the '+type+' radio. This station is hosted by https://listen.moe/');
voiceChannel.join().then(connection => {
			
			const dispatcher = connection.play('https://listen.moe/fallback', { volume: 1 });
			dispatcher.on('finish', () => voiceChannel.leave());
		});
                         }
else if (type == 'kpop') {message.reply('you are now listening to the '+type+' radio. This station is hosted by https://listen.moe/');
voiceChannel.join().then(connection => {
			
			const dispatcher = connection.play('https://listen.moe/kpop/fallback', { volume: 1 });
			dispatcher.on('finish', () => voiceChannel.leave());
		});
}
  else message.reply('There is no such radio with this name');
  }
  
  if (message.content === eprefix+'invite') {
    const embed = new Discord.MessageEmbed()
			.setColor('RANDOM')
			.setTitle(`Invite ${client.user.username} to your server!`)
			.setURL(`https://discordapp.com/oauth2/authorize?client_id=${client.user.id}&scope=bot&permissions=8`);
		return message.reply( embed );
  }
  
 if (message.content === eprefix+'radio source') {
 var embed = new Discord.MessageEmbed()
      .setAuthor(`${message.author.username} (${message.author.id})`)
        .setThumbnail(message.author.avatarURL())
        .addField('Lofi', 'http://hyades.shoutca.st:8043/stream',true)
        .addField('Vaporwave', 'http://radio.plaza.one/mp3',true)
        .addField('Jpop', 'https://listen.moe/fallback,true')
        .addField('Kpop', 'https://listen.moe/kpop/fallback',true)
        .setColor('#5CC5FF')
        
        .setFooter(client.user.username, "https://cdn.glitch.com/65f81ac1-5972-4a88-a61a-62585d79cfc0%2Fboxie-2048px.png?v=1594354728664")
    message.author.send(embed)
  }

  if (message.content === eprefix+'permissions') {
if (message.channel.type !== "text") {return message.channel.send('Please do this in a server with `'+client.user.username+'`')}
 var embed = new Discord.MessageEmbed()
      .setAuthor(`${message.author.username} (${message.author.id})`)
        .setThumbnail(message.author.avatarURL())
        .addField('Administrator', message.member.hasPermission('ADMINISTRATOR'),true)
        .addField('Ban Members', message.member.hasPermission('BAN_MEMBERS'),true)
        .addField('Kick Members', message.member.hasPermission('KICK_MEMBERS'),true)
        .addField('Manage Channels', message.member.hasPermission('MANAGE_CHANNELS'),true)
        .addField('Manage Guild', message.member.hasPermission('MANAGE_GUILD'),true)
        .addField('Manage Messages', message.member.hasPermission('MANAGE_MESSAGES'),true)
        .addField('Manage Nicknames', message.member.hasPermission('MANAGE_NICKNAMES'),true)
        .addField('Manage Roles', message.member.hasPermission('MANAGE_ROLES'),true)
        .addField('Manage Webhooks', message.member.hasPermission('MANAGE_WEBHOOKS'),true)
        .addField('Manage Emojis', message.member.hasPermission('MANAGE_EMOJIS'),true)
        .addField('Change Nickname', message.member.hasPermission('CHANGE_NICKNAME'),true)
        .addField('Stream', message.member.hasPermission('STREAM'),true)
        .addField('Connect', message.member.hasPermission('CONNECT'),true)
        .addField('Speak', message.member.hasPermission('SPEAK'),true)
        .addField('Priority Speaker', message.member.hasPermission('PRIORITY_SPEAKER'),true)
        .addField('Mute Members', message.member.hasPermission('MUTE_MEMBERS'),true)
        .addField('Deafen Members', message.member.hasPermission('DEAFEN_MEMBERS'),true)
        .addField('Move Members', message.member.hasPermission('MOVE_MEMBERS'),true)
        .addField('Use VAD (voice activity direction)', message.member.hasPermission('USE_VAD'),true)
        .addField('Add Reactions', message.member.hasPermission('ADD_REACTIONS'),true)
        .addField('Send Messages', message.member.hasPermission('SEND_MESSAGES'),true)
        .addField('Send TTS Messages', message.member.hasPermission('SEND_TTS_MESSAGES'),true)
        .addField('Create Instant Invite', message.member.hasPermission('CREATE_INSTANT_INVITE'),true)
        .addField('Embed Links', message.member.hasPermission('EMBED_LINKS'),true)
        .addField('Attach Files', message.member.hasPermission('ATTACH_FILES'),true)
        .addField('Read Message History', message.member.hasPermission('READ_MESSAGE_HISTORY'),true)
        .addField('Mention Everyone', message.member.hasPermission('MENTION_EVERYONE'),true)
        .addField('Use External Emojis', message.member.hasPermission('USE_EXTERNAL_EMOJIS'),true)
        .addField('View Channel', message.member.hasPermission('VIEW_CHANNEL'),true)
        .addField('View Audit Log', message.member.hasPermission('VIEW_AUDIT_LOG'),true)
        .addField('View Guild Insights', message.member.hasPermission('VIEW_GUILD_INSIGHTS'),true)
        .setColor('#5CC5FF')
        
        .setFooter(client.name, "https://cdn.glitch.com/65f81ac1-5972-4a88-a61a-62585d79cfc0%2Fboxie-2048px.png?v=1594354728664")
    message.channel.send(embed)
  }
  
  
  
  
  //Dm commands
  if (message.channel.type === "dm") {
    if (message.content.startsWith("mittz")) {message.channel.send("Ready when you are!");}
    if (message.content.startsWith("help")) {
    var embed = new Discord.MessageEmbed()
      .setAuthor(`${message.author.username} (${message.author.id})`)
        .setThumbnail(message.author.avatarURL())
        .addField('Need to contact the bot developer?', '<@193127888646701056>',true)
        .addField('Dont know any commands?','simple! just say `!v! help` or `!v! commandlist`',true)

        .setColor('#5CC5FF')
        
        .setFooter(client.name, "https://cdn.glitch.com/65f81ac1-5972-4a88-a61a-62585d79cfc0%2Fboxie-2048px.png?v=1594354728664")
    message.channel.send(embed)
    }
  }
  
//Owner Commands
  if (message.author.id===owner){
if (message.content==(eprefix+"restart")) {
    if (message.author.id!==owner){return message.reply("Only the owner of me `"+client.user.username+"` can do this")}
    message.channel.send("restarting now!")
    setTimeout(()=>{
         process.exit();
    },1)
  }
  }
//Admin/server commands
  if (message.channel.type === "text") {
if (message.member.hasPermission('ADMINISTRATOR')||message.author.id===owner){
  
  
  
  if (message.content.startsWith(eprefix+"set-prefix")) {
  const args = message.content.split(' ').slice(2); 
const prefix_given = args.join(' '); 
if (!prefix_given) return message.reply('You haven\'t given a prefix to be set'); 
     if (server.prefix[message.guild.id]!=='!v!') return message.channel.send(":closed_lock_with_key: **Whoops!** You already have a prefix!");
  message.channel.send("**:unlock: Beep Boop Beep! We're updating your prefix**").then(msg=>{
        server.prefix[message.guild.id]=prefix_given
       fs.writeFileSync("servers.json", JSON.stringify(server, null, 2));
       setTimeout(()=>{
         msg.edit(":lock: **Prefix updated to `"+server.prefix[message.guild.id]+"`**.")
    },1500)
  })
}
  if (message.content==(eprefix+"reset-prefix")||message.content==((client.user)+"reset-prefix")) {

   if (server.prefix[message.guild.id]==='!v!') return message.channel.send(":closed_lock_with_key: **Whoops!** This is already the default prefix!");
  message.channel.send("**:unlock: Beep Boop Beep! We're updating your prefix**").then(msg=>{
        server.prefix[message.guild.id]='!v!'
       fs.writeFileSync("servers.json", JSON.stringify(server, null, 2));
       setTimeout(()=>{
         msg.edit(":lock: **Prefix reset to `"+server.prefix[message.guild.id]+"`!**.")
    },1500)
  })
}
  
  
  if (message.content==eprefix+"stop") {
    const voiceChannel = message.member.voice.channel;
    voiceChannel.leave();
    message.channel.send("audio ended")
  }
  
  if (message.content.startsWith(eprefix+"createrole")) {
  const args = message.content.split(' ').slice(2); 
const name = args.join(' '); 
 var yes = 'üëç';
var no = 'üëé';
    if (!name) return message.reply('Ex. `'+eprefix+'createrole catto`'); 
    let role_check = message.member.guild.roles.cache.find(role => role.name === name);
if(!role_check) {
	message.react(yes).then(r => {
                            message.react(no);
                    });
    
    
message.guild.roles.create({ data: { name: name, permissions: ['READ_MESSAGE_HISTORY', 'SEND_MESSAGES','VIEW_CHANNEL'] } });
message.reply(`Role "`+name+`" has been created !`)
   
            message.channel.send('Would you also like to get this role');
     
      message.awaitReactions((reaction, user) => user.id == message.author.id && (reaction.emoji.name == yes || reaction.emoji.name == no),
                            { max: 1, time: 30000 }).then(collected => {
                                    if (collected.first().emoji.name == yes) {
                                      var role= message.member.guild.roles.cache.find(role => role.name === name);
                                      message.member.roles.add(role);
                                      message.reply("You have given yourself the \""+name+"\" role.")  
                                    }
                                    else
                                            message.channel.send('Operation canceled.');
                            }).catch((err) => {
                                    message.channel.send('No reaction after 30 seconds, operation canceled');
                                          console.log(err)
                            });
}
else {
	message.channel.send("The role \""+name+"\" already exists.")
}
      
}

  if (message.content.startsWith(eprefix+"createchannel")) {
    const args = message.content.split(' ').slice(2);
    const text = args.join(' '); 
    if (!text) {
    message.channel.send('no text given');}
    else if(text){
    message.guild.channels.create(text, {
  type: 'text',
  permissionOverwrites: [
     {
       id: message.author.id,
       deny: ['VIEW_CHANNEL'],
    },
  ],
})
    message.channel.send(`Text channel created ${text}.`);}
  }
  
    if (message.content === eprefix+'leave-server') {
      var yes = 'üëç';
      var no = 'üëé';
      message.react(yes).then(r => {
                            message.react(no);
                    });
      
      
      
            message.channel.send('The bot will now leave the server.\n'+ 'Confirm with a thumb up or deny with a thumb down.');
     
      message.awaitReactions((reaction, user) => user.id == message.author.id && (reaction.emoji.name == yes || reaction.emoji.name == no),
                            { max: 1, time: 30000 }).then(collected => {
                                    if (collected.first().emoji.name == yes) {
                                            message.channel.send(`;w; bye..`);
                                             message.guild.leave()
                                              .then(g => console.log(`Left the guild ${g}`))
                                              .catch(console.error);
                                            
                                    }
                                    else
                                            message.channel.send('Operation canceled.');
                            }).catch(() => {
                                    message.channel.send('No reaction after 30 seconds, operation canceled');
                            });
    }
  
  if (message.content.startsWith(eprefix+"clear")) {
  const args = message.content.split(' ').slice(2); 
const amount = args.join(' '); 
if (!amount) return message.reply('You haven\'t given an amount of messages which should be deleted!'); 
if (isNaN(amount)) return message.reply('The amount parameter isn`t a number!'); 
if (amount > 100) return message.reply('You can`t delete more than 100 messages at once!'); 
if (amount < 1) return message.reply('You have to delete at least 1 message!'); 
 message.channel.messages.fetch({ limit: amount }).then(messages => { 
    message.channel.bulkDelete(messages); 
  if(amount > 1){message.channel.send(":white_check_mark: "+amount+" messages have been deleted")} else {message.channel.send(":white_check_mark: 1 message has been deleted")};
});}
  if (message.content.startsWith(eprefix+"botname")) {
  const args = message.content.split(' ').slice(2); 
const name = args.join(' '); 
if (!name) return message.reply('You haven\'t given an amount of messages which should be deleted!'); 
client.user.setUsername(name);
    message.channel.send("bot name changed to \""+name+"\".")
    console.log("bot name changed to \""+name+"\".")

}
  let args = message.content.split(" ").slice(1);
  if (message.content.startsWith(prefix + "say")) {
    
   message.channel.send("" + args.join(" "))
  }
  
if (!message.guild) return;
  if (message.content.startsWith(eprefix + 'kick')) {
    const user = message.mentions.users.first();
    if (user) {
      if (user=="578319500475105341") {return message.reply(`sad cat noises 3:\nbut if you really want me to leave use ${eprefix} leave-server`)};
      const member = message.guild.member(user);
      if (member) {
        var yes = 'üëç';
      var no = 'üëé';

        message.react(yes).then(r => {
                            message.react(no);
                    });
            message.reply('You are about to kick '+user.tag+'\nConfirm with a thumb up or deny with a thumb down.');
     
      message.awaitReactions((reaction, user) => user.id == message.author.id && (reaction.emoji.name == yes || reaction.emoji.name == no),
                            { max: 1, time: 30000 }).then(collected => {
                                    if (collected.first().emoji.name == yes) {
                                            member.kick('Optional reason that will display in the audit logs').then(() => {
                                              user.send(new Discord.MessageEmbed().setTitle("You have been kicked by, `" + member.tag + "` from `" + member.guild.name + "`.").setDescription("```- If you think this was accidental, please contact the server Owner or staff\n- If you think this is a bot error contact my developer!```").setColor("#daff00"));
                                      message.reply(`Successfully kicked ${user.tag}`);
                                    }).catch(err => {
                                      message.reply('I was unable to kick this member');
                                      user.send("<@"+message.author.tag+"> has attempted to kick you");
                                      console.error(err);
                                    });         
                                    }
                                    else
                                            message.channel.send('Operation canceled.');
                            }).catch(() => {
                                    message.channel.send('No reaction after 30 seconds, operation canceled');
                            });
      } else {
        message.reply('That user isn\'t in this guild!');
      }
    } else {
      message.reply('You didn\'t mention the user to kick!');
      }
  }  
    }
  }
});

// Message edit event
client.on("messageUpdate", async(oldMessage, newMessage) => {
  // First let's also check that the content has actually changed
  if(oldMessage.content === newMessage.content){
    return;
  }
  logchannel = newMessage.guild.channels.cache.find(channel => channel.name === "„Äîü§ñÔΩúbot-logs„Äï");
  // Log embed
  var person = newMessage.author;
  let logembed = new Discord.MessageEmbed()
  .setAuthor(person.tag, person.avatarURL)
  .setThumbnail(person.avatarURL)
  .setColor("RED")
  .setDescription("‚úèÔ∏è Message Edited")
  .addField("Before", oldMessage.content, true)
  .addField("After", newMessage.content, true)
  .setTimestamp()
  // Let's send the embed
  logchannel.send(logembed) 
})

// Message deletion event
client.on("messageDelete", async message => {
  // Get the log channel again
  logchannel = message.guild.channels.cache.find(channel => channel.name === "„Äîü§ñÔΩúbot-logs„Äï");
  // Log embed
  var person = message.author;
  let logembed = new Discord.MessageEmbed()
  .setAuthor(person.tag, person.avatarURL)
  .setThumbnail(person.avatarURL)
  .setColor("RED")
  .setDescription(":wastebasket: Message Deleted")
  .addField("Message", message.content, true)
  .setTimestamp()
  // Let's send the embed
  logchannel.send(logembed) })


  client.on("guildMemberRemove", member =>{
    const channel = member.guild.channels.cache.find(ch => ch.name === '„ÄîüëãüèºÔΩúwelcome„Äï');
    channel.send(`Goodbye, ${member}..`);
    member.send(new Discord.MessageEmbed().setTitle("bye, " + member.displayName + " I noticed you have left " + member.guild.name + ".").setDescription("```See you later!```").setColor("#ffa500"));
});

client.on('guildMemberAdd', async member => {
  
  const channel = member.guild.channels.cache.find(ch => ch.name === '„ÄîüëãüèºÔΩúwelcome„Äï');
  member.send(new Discord.MessageEmbed().setTitle("Hey, " + member.displayName + " wecome to " + member.guild.name + " enjoy your stay!").setDescription("```- My prefix is !v!\n- You can get my attention by typing !v! help in chat. ```").setColor("5aff00"));
  if (!channel) return;
  // Send the message, mentioning the member
  channel.send(`Welcome to the server, ${member}`);
  const cachedInvites = guildInvites.get(member.guild.id);
    const newInvites = await member.guild.fetchInvites();
    guildInvites.set(member.guild.id, newInvites);
    try {
        const usedInvite = newInvites.find(inv => cachedInvites.get(inv.code).uses < inv.uses);
        const embed = new Discord.MessageEmbed()
            .setDescription(`${member.user.tag} is the ${member.guild.memberCount} to join.\nJoined using ${usedInvite.inviter.tag}\nNumber of uses: ${usedInvite.uses}`)
            .setTimestamp()
            .setTitle(`${usedInvite.url}`);

            channel.send(embed).catch(err => console.log(err));
    }
    catch(err) {
        console.log(err);
    }
});

function getUserFromMention(mention) {
	if (!mention) return;

	if (mention.startsWith('<@') && mention.endsWith('>')) {
		mention = mention.slice(2, -1);

		if (mention.startsWith('!')) {
			mention = mention.slice(1);
		}

		return client.users.cache.get(mention);
	}
}

client.on('inviteCreate', async invite => guildInvites.set(invite.guild.id, await invite.guild.fetchInvites()));

client.on("guildCreate", guild => {
  
  const channel = guild.channels.cache.find(channel => channel.type === 'text' && channel.permissionsFor(guild.me).has('SEND_MESSAGES'))
  channel.send("Thank you for inviting me, I am hoping to help whenever I can.")
  console.log(`New guild joined: ${guild.name} (id: ${guild.id}). This guild has ${guild.memberCount} members!`);
   client.user.setPresence({ activity: { name: `${eprefix} help | ${client.guilds.cache.size} guilds`,type: "STREAMING",url:"https://www.youtube.com/watch?v=P4i-VYcrEuc"}, status: 'idle'});
});

client.on("guildDelete", guild => {
  
  console.log(`I have been removed from: ${guild.name} (id: ${guild.id})`);
  client.user.setPresence({ activity: { name: `${eprefix} help | ${client.guilds.cache.size} guilds`,type: "STREAMING",url:"https://www.youtube.com/watch?v=P4i-VYcrEuc"}, status: 'idle'});
});


client.on("ready", async () => {
  //client.user.setUsername("Mittz");
  client.user.setPresence({ activity: { name: `${eprefix} help | ${client.guilds.cache.size} guilds`,type: "STREAMING",url:"https://www.youtube.com/watch?v=P4i-VYcrEuc"}, status: 'idle'});
  

});
client.login(process.env.main_token);